services:
  postgres:
    build: ./docker/postgres
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data # Persistent volume for PostgreSQL
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
  django-app:
    image: app-debug
    build:
      context: .
      dockerfile: ./Dockerfile.debug
    command: [ "./startup.sh" ]
    ports:
      - 8000:8000
      - 5678:5678 # debugy
    env_file:
      - .env
    volumes:
      - .:/app
    depends_on:
      postgres:
        condition: service_healthy
    #this makes the running user id on the container match the host user, saves some headache in file permission manageing
    #only needed in development
    user: "${UID:-0}:${GID:-0}"

  nginx:
    build:
      context: ./docker/nginx/
      dockerfile: Dockerfile
    ports:
      - "${APP_PORT:-80}:80"
    volumes:
      - ./static_root:/usr/share/nginx/html/static
      - ./media_root:/usr/share/nginx/html/media
    depends_on:
      - django-app
  test:
    # image: vms-server-app-test
    build:
      context: .
      # TODO: Use production docker file for this, Update: Need to creat ea seperate docker file for it, we need pytest deps, think on it later
      dockerfile: ./Dockerfile.debug
    command: [ "./startup.sh" ]
    ports:
      # - 8000:8000
      - ${DEBUG_PORT:-5678}:5678
    env_file:
      - ${ENV_FILE:-.env}
    volumes:
      - .:/app
    environment:
      - DEBUG=False
      - TESTING=True
      - DATABASE_URL=sqlite:///sqlite.db
    profiles:
      - test
networks:
  default:
    name: order_management
volumes:
  postgres_data:
